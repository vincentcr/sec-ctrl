#!/usr/bin/env python

import shutil
import os
import subprocess
import argparse

DEFAULT_EXCLUDES = ['dist', 'node_modules', '.git']


def main():
    args = parse_cmd_line()
    print args
    copy_src_files(src_dir=args.src_dir, dst_dir=args.dst_dir,
                   excludes=args.exclude)
    compile(args.dst_dir)


def parse_cmd_line():
    parser = argparse.ArgumentParser()
    parser.add_argument('--src-dir', default='.')
    parser.add_argument('--dst-dir')
    parser.add_argument('--exclude', action='append',
                        default=DEFAULT_EXCLUDES)
    args = parser.parse_args()
    return args


def copy_src_files(src_dir, dst_dir, excludes):
    src_files = list_src_files(src_dir=src_dir, excludes=excludes + [dst_dir])
    for src_file in src_files:
        rel_path = os.path.relpath(src_file, src_dir)
        dirname = os.path.join(dst_dir, os.path.dirname(rel_path))
        basename = os.path.basename(rel_path)
        dst_file = os.path.join(dirname, basename)
        print 'src_file=', src_file, 'dst_file=', dst_file
        if not os.path.exists(dirname):
            os.makedirs(dirname)
        shutil.copyfile(src_file, dst_file)


def list_src_files(src_dir, excludes):
    src_files = []
    entries = os.listdir(src_dir)
    for entry in entries:
        src_full_path = os.path.join(src_dir, entry)
        if entry in excludes:
            continue
        elif os.path.isfile(src_full_path):
            # src_files.append(entry)
            src_files.append(src_full_path)
        elif os.path.isdir(src_full_path):
            sub_entries = list_src_files(
                src_dir=src_full_path, excludes=excludes)
            for sub_entry in sub_entries:
                src_files.append(sub_entry)
                #src_files.append(os.path.join(entry, sub_entry))
        else:
            print 'ignoring non-regular file:', src_full_path

    return src_files


def compile(dst_dir):
    os.chdir(dst_dir)
    subprocess.check_call(['tsc'])
    subprocess.check_call(['npm', 'install', '--production'])


main()
