# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

jobs:
  build:
    docker:
      - image: circleci/node:8.10
    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache common dependencies
      - restore_cache:
          keys:
            - v1-common-dependencies-{{ checksum "common/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-common-dependencies-
      - run:
          name: Install NPM dependencies for common
          command: cd common && npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-common-dependencies-{{ checksum "common/package.json" }}
      # Download and cache cloud dependencies
      - restore_cache:
          keys:
            - v1-cloud-dependencies-{{ checksum "cloud/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-cloud-dependencies-
      - run:
          name: Install NPM dependencies for cloud
          command: cd cloud && npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-cloud-dependencies-{{ checksum "cloud/package.json" }}
      - run:
          name: Transpile TypeScript files
          command: cd cloud && ./node_modules/.bin/tsc
      - run:
          name: Build archive
          command: cd cloud && mkdir out && zip -q -r out/lambda.zip .
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  test:
    docker:
      - image: circleci/node:8.10
      - image: postgres:10-alpine
    working_directory: ~/repo
    environment:
      sec_ctrl__db__port: 5432
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Setup test db
          command: cd cloud && npm run setup-test-db
      - run:
          name: Run tests
          command: cd cloud && npm test

  deploy:
    docker:
      - image: cibuilds/aws:latest
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Deploy to Lambda
          command: aws lambda update-function-code --function-name sec-ctrl --zip-file fileb://cloud/out/lambda.zip

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - build
            - test
          filters:
            branches:
              only: master
